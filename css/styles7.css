/* Модуль 4 - Урок 7 - Фон та декоративні елементи */

h1 h2 {
  margin-left: 50px;
}

/* --ФОНЫ-- */
.bg {
  width: 800px;
  height: 400px;
  margin: 0 auto;
  padding: 20px;
  border: 5px dashed rgba(0, 0, 0, 0.4);
  color: maroon;
  background-image: url(../img/lesson7-mar-caribe-min.jpg);
  background-repeat: no-repeat;
  /* не повторять изображение. по умолчанию повторяет */
  background-position: center;
  /* центрует по X Y */
  /* background-position: top right; */
  /* разместит изображение сверху справа */
  /* background-position: top 20px right 30px; */
  /* сверху справа и отступит указанное значение */
  /* background-position: top 10% right 30%; */
  /* отступит в % значении */
  /* background-position: top -20px right -30px; */
  /* отступит с выходом за грани рабочей области */
  /* background-size: 200px; */
  /* изменяет ширину, высота уменьшится пропорционально */
  /* background-size: 200px 200px; */
  /* изменяет ширину и высоту нарушая пропорции */
  /* background-size: 50% 100%; */
  /* изменяет ширину и высоту нарушая пропорции в % */
  /* background-size: calc(50%-100px); */
  /* работает с формулами калькуляции */
  /* background-size: auto; */
  /* автоматический размер */
  /* background-size: contain; */
  /* заполняет фон, пока не упрется в одну из рамок */
  /* background-size: cover; */
  /* изображение будет растянуто пока не заполнит всю область */
}

/* --НАЛОЖЕНИЕ ФОНОВ-- */
.minecraft {
  height: 600px;
  outline: 3px solid orange;
  background-image: url(../img/minecraft-1.png), url(../img/minecraft-2.png),
    url(../img/minecraft-3.png), url(../img/minecraft-bcg.jpg);
  /* изображение написанное первым - самое верхнее */
  background-repeat: no-repeat;
  /* background-repeat: no-repeat, repeat, repeat-x, repeat-y; */
  /* если прописывать по порядку повторение */
  background-position: bottom 50px left 450px, bottom 50px left 650px, bottom 50px right 850px,
    center;
  background-size: 230px, 250px, 80px, auto;
}

/* --ГРАДИЕНТ-- */
.container {
  width: 600px;
  height: 300px;
  margin: 0 auto;
}
.linear {
  /* background-image: linear-gradient(blue, yellow); */
  /* равномерный переход градиента */
  /* background-image: linear-gradient(to bottom right, blue 0 20%, yellow 55% 100%); */
  /* меняет направление смены цвета и устанавливает диапазон насыщенности цвета, от и до в %*/
  background-image: linear-gradient(blue 0% 33%, yellow 33% 66%, green 66% 100%);
  /* четкое указание % на которых меняется цвет */
  /* !!! значения можно указывать и в px и в других значениях */
}

.radial {
  /* background-image: radial-gradient(blue, red, yellow); */
  /* background-image: radial-gradient(ellipse at top, blue, red, yellow); */
  /* смена цветов элипсом в верх раб области  */
  /* background-image: radial-gradient(ellipse at center, blue, red, yellow); */
  /* смена цветов элипсов в центр рабочей области  */
  /* background-image: radial-gradient(circle at center, red 0 20%, green 30% 50%, yellow 80% 100%); */
  /* смена цветов кругом в центр рабочей области с указанием областей заливки и размытия */
  background-image: radial-gradient(
    circle at center,
    transparent 0 20%,
    green 30% 50%,
    yellow 80% 100%
  );
  /* transparent сделает прозрачность */
}

/* --ТЕНИ-- */
.shadow-box {
  width: 400px;
  height: 400px;
  padding: 20px;
  background-color: orange;
  margin: 50px auto;
  color: transparent;
  margin-bottom: 4px;
  /* box-shadow: 10px 10px 10px 10px rgba(0, 0, 200, 0.5); */
  /* первое значение параметр оси x, второе - ось y, третье - размытие тени (размывает во все стороны), четвертое - спред (распространение тени), при rgba можно ставить прозрачность тени*/

  /* box-shadow: -10px -10px 0 0 blue; */
  /* смещение по оси с минусовым значением от x y */

  /* box-shadow: 500px 0px 0 0 blue; */
  /* смещая по осям можно делать копию элемента */

  /* border-radius: 50%; */
  /* добавив свойство border-radius можно установить закругленность вплоть до круга */

  /* box-shadow: inset 10px 10px 10px 0px blue; */
  /* добавив параметр inset тень входит вовнутрь */

  /* box-shadow: 10px 10px 5px 5px blue, 20px 20px 5px 5px green, 30px 30px 5px 5px brown, 40px 40px 5px 5px yellow; */
  /* можно добавлять несколько последовательных теней */

  box-shadow: 10px 10px 5px 5px blue;
}

/* --КНОПКА С ЭФФЕКТОМ ТЕНИ-- */
.shadow-btn {
  width: 200px;
  height: 100px;
  padding: 20px;
  background-color: blue;
  margin: 50px auto;
  color: transparent;
  margin-bottom: 4px;
  box-shadow: 5px 5px 5px 0px yellow;
  transition: transform 300ms, box-shadow 300ms;
  /* transition добавляет анимацию смещения */
  /* можно погуглить "ховер эффект с тенью" */
  /* Box-shadov generator */
}
.shadow-btn:hover {
  box-shadow: unset;
  /* эффект исчезания тени */
  transform: translate(5px, 5px);
}

/* -- ПСЕВДОЭЛЕМЕНТЫ BEFORE AFTER-- */
/* может использоваться с любым типом контента (текст, див и тд) */
/* записываются через двк двекрапки :: */
/* before - перед элементом, after - после элемента */

.pseudo-element {
  padding: 20px;
  background-color: grey;
  margin: 100px;
}
.pseudo-element::before {
  content: 'ОПАЧА ';
  /* без свойства "content" псевдоэлемент не будет создан */
  color: red;
}
.pseudo-element:hover::before {
  color: greenyellow;
}
.pseudo-element::after {
  content: 'ТА ВАЩЕ! ';
  /* без свойства "content" псевдоэлемент не будет создан */
  color: red;
}
.pseudo-element:hover::after {
  color: brown;
}
/* теперь ховер работает даже при наведении на материнский элемент */

.pseudo-element-box {
  margin: 20px 100px;
  font-size: 30px;
  color: green;
  display: flex;
  /* align-items: baseline; */
  /* выравнивает по нижнему краю */
  align-items: center;
  /* выравнивает по центру */
}

.pseudo-element-box::before {
  content: '';
  width: 100px;
  height: 20px;
  margin-right: 100px;
  /* background-color: coral; */
  background-color: currentColor;
  /* наслідує колір батьківського елементу. в данном случае - цвет текста*/
  border: 2px solid black;
  /* display: block; */
  /* display-block элементы становятся автоматически блочными, если использовано display-flex. display-block нужно только на этапе пока нет  display-flex*/
}
.pseudo-element-box::after {
  content: '';
  /* width: 150px; */
  flex-grow: 1;
  /* заполнит все свободное пространство по длине элемента */
  height: 10px;
  margin-left: 100px;
  background-color: rgb(43, 255, 0);
  border: 1px solid rgb(55, 0, 255);
}
.pseudo-element-box:hover::after {
  background-color: rgb(55, 0, 255);
  border: 1px solid rgb(43, 255, 0);
}
